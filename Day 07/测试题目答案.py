# 第1题
"""
不可变性具体指的是当一个元素出现在元组中，它的索引，它自身无法被修改
my_tuple = 10会报错
"""
# 第2题
void_tuple = () #定义空元组
five_tuple = (5,)
"""
单个元素必须要有括号
(5)圆括号在这里被解释为优先级操作符
"""
# 第3题
"""
1、tuple1+tuple2 
2、索引
3、切片
"""
# 第4题
my_var = "apple", 3.14, True
"""
它的类型是元组tuple
它的值有三个
过程称为打包
"""
# 第5题
point = (10, 20)
x, y = point
# 第6题
data = (1, 2, 3, 4, 5, 6)
first, *middle, last = data
"""
*最多出现一次，收集到的类型是列表
"""
# 第7题
a,b = 3,4
a,b = b,a
print(a,b)
# 第8题
"""
1、比如说我要存储字典的键，因为字典的键是不能够被修改，元组的元素也有这个特性
2、创建元组比创建列表更快（同样的数据）
3、数据安全：在整个流程中确保数据不会被修改
4、如果我就想要一个确定的值，我就可以用元组
"""
# 第9题
"""
元组更有优势
"""
# 第10题
my_list = [1,2,3,4,5]
tuple(my_list)
my_tuple = ('x', 'y', 'z')
list(my_tuple)
# 第11题
def math(m,n):
    return m*n,m+n
ans = math(3,4)
print(ans)
# 第12题
age, name  = 18,'bob'
msg = 'I am %s and I am %d years old' % (name,age)
print(msg)
# 第13题
my_tuple2 = (1,[2,3],4)
"""
不能修改值
可以修改列表指向的内容
不矛盾，因为列表是可以改变的，元组只需要保证在该索引处有一个列表就不会报错
"""
my_tuple2[1][1] = 5
print(my_tuple2)
# my_tuple2[1] = 3 如果不是列表了就会报错

# 第14题
"""
因为一周七天是不会改变的，你可以很容易用索引和切片访问
而避免了一不小心的修改
"""
# 第15题
"""
切片，索引，返回某个元素的次数
"""